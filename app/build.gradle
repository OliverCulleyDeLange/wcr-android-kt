apply plugin: 'com.android.application'
apply plugin: 'groovyx.android'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "uk.co.oliverdelange.wcr_android_kt"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
//    signingConfigs {
//        releaseDevelop {
//            keyAlias "WCR Release"
//            storeFile file("/Users/culleyo1/.ssh/wcr_signing.jks")
//            keyPassword KEYPWD //These come from <USER_HOME>/.gradle/gradle.properties
//            storePassword KSTOREPWD
//        }
//    }
    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.releaseDevelop
//        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    dataBinding {
        enabled = true
    }
    dexOptions {
        javaMaxHeapSize "2g"
    }
    androidExtensions {
        experimental = true
    }
}

def versions = [:]
versions.support = '1.0.0-beta01'
versions.arch_core = '2.0.0-beta01'
versions.firebase_auth_ui = "4.0.0"
//versions.facebook = "4.33.0"
versions.gmaps = "15.0.1"
versions.maps_utils = "0.5"
versions.metadata_extractor = "2.9.0"
versions.apache_commons = "2.6"
versions.floating_search_view = "2.1.1"
versions.retrofit = "2.3.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.picasso = "2.71828"
versions.cloudinary = "1.24.0"
versions.butterknife = "8.8.1"
versions.timber = "4.7.0"
versions.dagger = "2.16"
versions.stetho = "1.5.0"
versions.mapstruct = "1.2.0.CR1"
versions.lombok = "1.16.20"
versions.rxjava2 = "2.1.14"
versions.rxandroid = "2.0.2"
versions.room = '2.0.0-beta01'
versions.anko = "0.10.5"
versions.material_drawer_kt = "1.3.3"
versions.material_drawer = "6.0.6@aar"
versions.about_libraries = "6.0.6@aar"

versions.junit = "4.12"
versions.mockito_kotlin = "1.5.0"
versions.testrunner = '1.1.0-alpha4'
versions.espresso = '3.1.0-alpha4'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:${versions.anko}"
    implementation "com.firebaseui:firebase-ui-auth:${versions.firebase_auth_ui}"
//    implementation "com.facebook.android:facebook-android-sdk:${versions.facebook}"

    implementation "androidx.appcompat:appcompat:${versions.support}"
    implementation "androidx.recyclerview:recyclerview:${versions.support}"
    implementation "androidx.annotation:annotation:${versions.support}"
    implementation "com.google.android.material:material:${versions.support}"
    implementation "androidx.cardview:cardview:${versions.support}"
//    implementation "com.android.support:support-core-utils:${versions.support}"

    implementation "androidx.room:room-runtime:$versions.room"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.arch_core}"

    implementation "com.google.android.gms:play-services-maps:${versions.gmaps}"
    implementation "com.google.maps.android:android-maps-utils:${versions.maps_utils}"

    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava2}"

    implementation "com.github.arimorty:floatingsearchview:${versions.floating_search_view}"

    implementation "co.zsmb:materialdrawer-kt:${versions.material_drawer_kt}"
    implementation("com.mikepenz:materialdrawer:${versions.material_drawer}") { transitive = true }
    implementation("com.mikepenz:aboutlibraries:${versions.about_libraries}") { transitive = true }

//    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
//    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
//    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

    implementation "com.squareup.picasso:picasso:${versions.picasso}"
    implementation "com.cloudinary:cloudinary-android:${versions.cloudinary}"

    implementation "com.jakewharton.timber:timber:${versions.timber}"

    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"

    implementation "com.facebook.stetho:stetho:${versions.stetho}"
    implementation "com.facebook.stetho:stetho-okhttp3:${versions.stetho}"

    implementation "com.mikepenz:google-material-typeface:3.0.1.2.original@aar"
    implementation "com.mikepenz:fontawesome-typeface:5.0.6.0@aar"

    kapt "androidx.room:room-compiler:$versions.room"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"
//    annotationProcessor "android.arch.lifecycle:compiler:${versions.arch_core}"
//    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"

    testImplementation 'org.spockframework:spock-core:1.1-groovy-2.4-rc-2'
    testImplementation 'org.objenesis:objenesis:2.6'
    testImplementation 'cglib:cglib-nodep:3.2.4'
    testImplementation "org.mockito:mockito-core:2.17.0"
    testImplementation 'org.codehaus.groovy:groovy:2.4.13:grooid'
    testImplementation "androidx.arch.core:core-testing:${versions.arch_core}"


    androidTestImplementation "androidx.test:runner:${versions.testrunner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation "androidx.test:rules:${versions.testrunner}"

}

apply plugin: 'com.google.gms.google-services'
