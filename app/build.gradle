apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.secret.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 29
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "uk.co.oliverdelange.wcr_android_kt"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 2
        versionName "2019-11-08"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // https://stackoverflow.com/questions/44322178/room-schema-export-directory-is-not-provided-to-the-annotation-processor-so-we
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    signingConfigs {
        releaseDevelop {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseDevelop
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    dataBinding {
        enabled = true
    }
    dexOptions {
        javaMaxHeapSize "2g"
    }
    androidExtensions {
        experimental = true
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:0.10.5"

    //https://firebase.google.com/support/release-notes/android
    // Firebase & Crashlytics
    implementation "com.firebaseui:firebase-ui-auth:4.3.1"
    implementation "com.google.firebase:firebase-auth:19.3.1"
    implementation "com.google.firebase:firebase-firestore-ktx:21.4.3"
    implementation 'com.google.firebase:firebase-storage:19.1.1'
    implementation 'com.google.firebase:firebase-analytics:17.4.0'
    implementation 'com.google.guava:guava:27.0.1-android'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // Android
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.work:work-runtime-ktx:2.3.4"
    implementation "androidx.work:work-rxjava2:2.3.4"
    implementation "androidx.cardview:cardview:1.0.0"
              kapt "androidx.room:room-compiler:2.2.5"
    implementation "androidx.room:room-runtime:2.2.5"
    implementation "android.arch.persistence.room:rxjava2:1.1.1"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:2.2.0"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // Google Maps
    implementation "com.google.android.gms:play-services-maps:17.0.0"
    implementation "com.google.maps.android:android-maps-utils:0.5"

    implementation "com.google.android.material:material:1.2.0-alpha06"

    //Dagger
              kapt "com.google.dagger:dagger-compiler:2.16"
              kapt "com.google.dagger:dagger-android-processor:2.16"
    implementation "com.google.dagger:dagger:2.24"
    implementation "com.google.dagger:dagger-android:2.16"
    implementation "com.google.dagger:dagger-android-support:2.16"

    // Rx
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.16"

    implementation "com.github.arimorty:floatingsearchview:2.1.1"

    implementation 'com.github.OliverCulleyDeLange:Spotlight:8f66c80cc8'

    implementation "co.zsmb:materialdrawer-kt:2.0.1"
    implementation("com.mikepenz:materialdrawer:6.1.1@aar") { transitive = true }
    implementation("com.mikepenz:aboutlibraries:6.0.6@aar") { transitive = true }

    implementation "com.squareup.picasso:picasso:2.71828"

    implementation "com.jakewharton.timber:timber:4.7.1"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'

    debugImplementation 'com.facebook.flipper:flipper:0.39.0'
    debugImplementation 'com.facebook.soloader:soloader:0.9.0'
    releaseImplementation 'com.facebook.flipper:flipper-noop:0.39.0'

    implementation "com.mikepenz:google-material-typeface:3.0.1.2.original@aar"
    implementation "com.mikepenz:fontawesome-typeface:5.0.6.0@aar"

    // Testing
    def koTestVersion = "4.0.2"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$koTestVersion"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$koTestVersion"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // https://developer.android.com/jetpack/androidx/releases/test#1.2.0
    // https://developer.android.com/training/testing/set-up-project#android-test-dependencies
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
    androidTestImplementation "androidx.test:rules:1.2.0"
}

apply plugin: 'com.google.gms.google-services'
